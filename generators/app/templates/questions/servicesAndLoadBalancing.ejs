<% if (publicWorkloads.length || databases.length) { %>

# Services and Load Balancing<% for (var i = 0; i < publicWorkloads.length; i++) { workload = publicWorkloads[i]; %>
  - variable: ingress.<%- _.camelCase(workload.name) %>.enabled
    default: true
    description: ''
    type: boolean
    label: '<%- spaceCase(workload.name) %> ingress enabled'
    show_subquestion_if: true
    group: 'Services and Load Balancing'
    subquestions:
      - variable: ingress.<%- _.camelCase(workload.name) %>.tls
        default: false
        description: ''
        type: boolean
        required: true
        label: '<%- spaceCase(workload.name) %> ingress tls'
      - variable: ingress.<%- _.camelCase(workload.name) %>.hostname
        default: xip.io
        description: ''
        type: hostname
        required: true
        label: '<%- spaceCase(workload.name) %> ingress hostname'
      - variable: ingress.<%- _.camelCase(workload.name) %>.issuer.name
        default: letsencrypt-staging
        description: ''
        type: enum
        show_if: ingress.<%- _.camelCase(workload.name) %>.tls=true
        options:
          - none
          - letsencrypt-staging
          - letsencrypt-prod
        required: true
        label: '<%- spaceCase(workload.name) %> ingress issuer name'
      - variable: ingress.<%- _.camelCase(workload.name) %>.certificate
        default: ''
        description: ''
        type: string
        show_if: ingress.<%- _.camelCase(workload.name) %>.tls=true&&ingress.<%- _.camelCase(workload.name) %>.issuer.name=none
        required: false
        label: '<%- spaceCase(workload.name) %> ingress certificate'
  - variable: service.<%- _.camelCase(workload.name) %>.type
    default: NodePort
    description: ''
    type: enum
    show_if: ingress.<%- _.camelCase(workload.name) %>.enabled=false
    options:
      - ClusterIP
      - NodePort
      - LoadBalancer
    required: true
    label: '<%- spaceCase(workload.name) %> service type'
    group: 'Services and Load Balancing'
  - variable: service.<%- _.camelCase(workload.name) %>.nodePorts.http
    default:
    description: ''
    type: int
    required: false
    min: 30000
    max: 32767
    show_if: service.<%- _.camelCase(workload.name) %>.type=NodePort&&ingress.<%- _.camelCase(workload.name) %>.enabled=false
    label: '<%- _.camelCase(workload.name) %> http node port'
    group: 'Services and Load Balancing'
  - variable: service.<%- _.camelCase(workload.name) %>.lbPorts.http
    default: 80
    description: ''
    type: int
    min: 0
    max: 65535
    required: true
    show_if: service.<%- _.camelCase(workload.name) %>.type=LoadBalancer&&ingress.<%- _.camelCase(workload.name) %>.enabled=false
    label: '<%- _.camelCase(workload.name) %> http lb port'
    group: 'Services and Load Balancing'<% }} %>