apiVersion: v1
kind: Service
metadata:
  name: {{ template "<%- _.kebabCase(name) %>.fullname" . }}-<%- _.kebabCase(workload.name) %>
  labels:
    app: {{ template "<%- _.kebabCase(name) %>.name" . }}-<%- _.kebabCase(workload.name) %>
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:<% if (!workload.public) { %>
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: container<% } else { %>
  {{- if .Values.ingress.<%- workload.name %>.enabled }}
  type: ClusterIP
  {{- else }}
  type: {{ .Values.service.<%- workload.name %>.type }}
  {{- if (eq .Values.service.<%- workload.name %>.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.service.<%- workload.name %>.externalTrafficPolicy }}
  {{- end }}
  {{- end }}
  ports:
    - name: http
      port: {{ (eq .Values.service.<%- _.camelCase(workload.name) %>.type "LoadBalancer") | ternary .Values.service.<%- _.camelCase(workload.name) %>.lbPorts.http "80" }}
      targetPort: container
      {{- if (and (eq .Values.service.<%- _.camelCase(workload.name) %>.type "NodePort") (not (empty .Values.service.<%- _.camelCase(workload.name) %>.nodePorts.http))) }}
      nodePort: {{ .Values.service.<%- _.camelCase(workload.name) %>.nodePorts.http }}
      {{- end }}<% } %>
  selector:
    app: {{ template "<%- _.kebabCase(name) %>.name" . }}-<%- _.kebabCase(workload.name) %>
    release: {{ .Release.Name }}
