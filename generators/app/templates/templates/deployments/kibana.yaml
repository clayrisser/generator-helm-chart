{{- if (and .Values.config.elasticsearch.internal .Values.config.kibana.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "<%- _.kebabCase(name) %>.fullname" . }}-kibana
  labels:
    app: {{ template "<%- _.kebabCase(name) %>.name" . }}-kibana
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "<%- _.kebabCase(name) %>.name" . }}-kibana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "<%- _.kebabCase(name) %>.name" . }}-kibana
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: lifecycle
                    operator: In
                    values:
                      - spot
      containers:
        - name: {{ template "<%- _.kebabCase(name) %>.fullname" . }}-kibana
          image: {{ .Values.images.kibana.repository }}:{{ .Values.images.kibana.tag }}
          imagePullPolicy: {{ .Values.images.kibana.pullPolicy }}
          ports:
            - name: container
              containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: http://{{ template "<%- _.kebabCase(name) %>.fullname" . }}-elasticsearch:9200
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "<%- _.kebabCase(name) %>.fullname" . }}-elasticsearch-auth
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "<%- _.kebabCase(name) %>.fullname" . }}-elasticsearch-auth
                  key: password
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
{{- end }}
